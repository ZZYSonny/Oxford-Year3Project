include "correct.csp"
include "lin.csp"
Spec2Thread = Linearizers({T1,T2}) 
Spec4Thread = Linearizers({T1,T2,T3,T4})

----------------------------------
--Test for 1 sender and 1 receiver
--Where the sender always send A
--The receiver always receive A
System1 = runWith(True,True,
  runP(send(T1,A)) |||
  runP(receive(T2,IsA))
)
assert Spec2Thread [T= System1
--check this system never diverges
System2 = runWith(False,True,
  runP(send(T1,A)) |||
  runP(receive(T2,IsA))
)
assert System2 :[deadlock free]

----------------------------------
--Test for 2 sender and 2 receiver
--Where one sender always send A, the other always send B
--One receiver always receive A, the other always receive B
System3 = runWith(True,True,
  runP(send(T1,A)) |||
  runP(send(T2,B)) |||
  runP(receive(T3,IsA)) |||
  runP(receive(T4,IsB))
)
assert Spec4Thread [T= System3
System4 = runWith(False,True,
  runP(send(T1,A)) |||
  runP(send(T2,B)) |||
  runP(receive(T3,IsA)) |||
  runP(receive(T4,IsB))
)
assert System4 :[deadlock free]

----------------------------------
--Test for 2 sender and 2 receiver
--Where two sender non deterministically send A or B
--Two receiver non deterministically receive A or B
senderWorker(me) = runP(|~| x:TypeData @ send(me,x);SKIP)
receiverWorker(me) = runP(|~| p:TypePred @ receive(me,p);SKIP)
System5 = runWith(True,True,
  senderWorker(T1) |||
  senderWorker(T2) |||
  receiverWorker(T3) |||
  receiverWorker(T4)
)
assert Spec4Thread [T= System5
System6 = runWith(False,True,
  senderWorker(T1) |||
  senderWorker(T2) |||
  receiverWorker(T3) |||
  receiverWorker(T4)
)
assert System6 :[deadlock free]


