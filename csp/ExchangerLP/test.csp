include "faulty.csp"
include "lin.csp"

----------------------------------
--Test for two process
--Where one always exchange A
--The second always exchange B
System1 = runWith(True,True,
  runP(exchange(T1,A)) |||
  runP(exchange(T2,B))
)
--check the system obeys the linearizer
Spec2Thread = Linearizers({T1, T2}) 
assert Spec2Thread [T= System1
--check the same system never deadlock and diverges only because of spurious wakeup
System2 = runWith(False,True,
  runP(exchange(T1,A)) |||
  runP(exchange(T2,B))
)
assert System2 :[deadlock free]


----------------------------------
--Test for three process
--Where one always exchange A
--The second always exchange B
--The third always exchange C
System3 = runWith(True,True,
  runP(exchange(T1,A)) |||
  runP(exchange(T2,B)) |||
  runP(exchange(T3,C))
)
Spec3Thread = Linearizers({T1, T2, T3}) 
assert Spec3Thread [T= System3

System4 = runWith(False,True,
  runP(exchange(T1,A)) |||
  runP(exchange(T2,B)) |||
  runP(exchange(T3,C))
)
assert System4 :[deadlock free]

----------------------------------
--Test for three process
--Where each non determinisiT3ally choose A,B,C to exchange

--Behavior of each process
System5 = runWith(True,True,
  runP(|~| data:TypeData @ exchange(T1,data)) |||
  runP(|~| data:TypeData @ exchange(T2,data)) |||
  runP(|~| data:TypeData @ exchange(T3,data))
)
assert Spec3Thread [T= System5

System6 = runWith(false,True,
  runP(|~| data:TypeData @ exchange(T1,data)) |||
  runP(|~| data:TypeData @ exchange(T2,data)) |||
  runP(|~| data:TypeData @ exchange(T3,data))
)
assert System6 :[deadlock free]
