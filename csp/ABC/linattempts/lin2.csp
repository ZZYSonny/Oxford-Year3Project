--Further simplified linearizer
--by simplifying the sync event using the spec process
channel Sync: TypeThreadID.TypeThreadID.TypeThreadID.TypeData.TypeData.TypeData
--Sync.t1.t2.t3.a.b.c corresponds to
--Thread t1 calls ASync with parameter a and returns b.c
--Thread t2 calls BSync with parameter b and returns a.c
--Thread t3 calls CSync with parameter c and returns a.b

--Linearizer for a process
Lin(All,me)= (
      --me synchronizes as thread A
      Call!me!ASync?a ->
      Sync!me?t2:diff(All,{me})?t3:diff(All,{me,t2})!a?b?c ->
      Return!me!ASync!b!c ->
      Lin(All,me)
    ) [] (
      --me synchronizes as thread B
      Call!me!BSync?b ->
      Sync?t2:diff(All,{me})!me?t3:diff(All,{me,t2})?a!b?c ->
      Return!me!BSync!a!c ->
      Lin(All,me)
    ) [] (
      --me synchronizes as thread C
      Call!me!CSync?c ->
      Sync?t2:diff(All,{me})?t3:diff(All,{me,t2})!me?a?b!c ->
      Return!me!CSync!a!b ->
      Lin(All,me)
    )

LinEvents(All,me)=union({
  e | e <- {|Sync|},
  let Sync.t1.t2.t3.a.b.c=e within
    countList(me,<t1,t2,t3>)==1
},{|Call.me,Return.me|})

Linearizers(All)= (|| me: All @ [LinEvents(All,me)]  Lin(All,me)) \ {|Sync|}