include "correct.csp"

hide = True
channel Sync: TypeThreadID.TypeData.(TypeData.TypeData).TypeThreadID.TypeData.(TypeData.TypeData).TypeThreadID.TypeData.(TypeData.TypeData)

--Linearizer for a process
Lin(All,me)=
  |~| a: TypeData @ |~| b: TypeData @ |~| c: TypeData @
  |~| t2: diff(All,{me}) @ |~| t3: diff(All,{me,t2}) @ (
      --me synchronizes as thread A
      Call!me!ASync!a ->
      Sync!me!a!b!c!t2!b!a!c!t3!c!a!b ->
      Return!me!ASync!b!c ->
      Lin(All,me)
    ) [] (
      --me synchronizes as thread B
      Call!me!BSync!b ->
      Sync!t2!a!b!c!me!b!a!c!t3!c!a!b ->
      Return!me!BSync!a!c ->
      Lin(All,me)
    ) [] (
      --me synchronizes as thread C
      Call!me!CSync!c ->
      Sync!t2!a!b!c!t3!b!a!c!me!c!a!b ->
      Return!me!CSync!a!b ->
      Lin(All,me)
    )

RelatedSync(All,me)=union({
  Sync.me.a.b.c.t2.b.a.c.t3.c.a.b,
  Sync.t2.a.b.c.me.b.a.c.t3.c.a.b,
  Sync.t2.a.b.c.t3.b.a.c.me.c.a.b| 
  t2<-diff(All,{me}), t3<-diff(All,{me,t2}),
  a<-TypeData, b<-TypeData, c<-TypeData
},{
  Call.me.op.a,
  Return.me.op.b.c|
  op<-TypeOps,
  a<-TypeData, b<-TypeData, c<-TypeData
})

Linearizers(All)= || me: All @ [RelatedSync(All,me)]  Lin(All,me)

System1 = runWith(hide,
    repeat(SyncA(TA,A)) |||
    repeat(SyncB(TB,B)) |||
    repeat(SyncC(TC,C))
)
Spec1 = (Linearizers({TA, TB, TC})) \ {|Sync|}
assert Spec1 [T= System1