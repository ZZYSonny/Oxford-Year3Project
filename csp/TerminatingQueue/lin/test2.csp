include "../common.csp"
include "../queue_abc.csp"
include "faulty3.csp"
include "lin.csp"

instance Monitor=ModuleMonitor(TypeThread, True)
QUEUE_ERROR_ACTION = DIV



Thread(NThread,me)= chaosP(
  (|~| x:TypeData @ enqueue(NThread,me,x))
  |~| dequeue(NThread,me)
)
System(All)=runWith(False,True,
  (||| me:All @ Thread(card(All),me)) 
)

SystemSpec(All)=Monitor::specWithSpurious(Linearizers(All))
Spec1Thread=SystemSpec({T1})
Spec2Thread=SystemSpec({T1,T2})
Spec3Thread=SystemSpec({T1,T2,T3})
Spec4Thread=SystemSpec({T1,T2,T3,T4})
Spec5Thread=SystemSpec({T1,T2,T3,T4,T5})


System1=System({T1})
System2=System({T1,T2})
System3=System({T1,T2,T3})
System4=System({T1,T2,T3,T4})
System5=System({T1,T2,T3,T4,T5})

assert Spec2Thread [T= System2
assert Spec3Thread [T= System3

assert System({T1,T2}) :[divergence free]
assert System({T1,T2,T3}) :[divergence free]

assert Spec2Thread [F= System2
assert Spec3Thread [F= System3
