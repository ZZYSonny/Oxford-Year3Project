channel Sync: TypeThread.TypeCallParam.TypeReturnParam

--The Spec Process
Spec(q)=( length(q)+1<=NQueueCapacity & 
  --A thread performing an enqueue operation
  Sync?t?(EnqueueCall.x):{|EnqueueCall|}!EnqueueReturn ->
  Spec(q^<x>)
) [] ( not qEmpty(q) &
  --A thread performing an dequeue operation, and successfully
  --obtained a return value
  Sync?t!(DequeueCall)!(DequeueReturn.head(q)) ->
  Spec(tail(q))
) [] ( qEmpty(q) & 
  --A thread perfoming an dequeue operation, but all other threads
  --are dequeueing. Every thread returns none exactly once, then
  --system stops. Might be unnecessary?
  Sync?t!DequeueCall!(DequeueReturnNone) ->
  SpecNone(diff(TypeThread,{t}))
)
--Every thread performs returns none exactly once
SpecNone({})=STOP
SpecNone(s)=
  Sync?t:s!DequeueCall!(DequeueReturnNone) ->
  SpecNone(diff(s,{t}))


Lin(All,me)=(
  Call!me?enqueueCallObj:{|EnqueueCall|} ->
  Sync!me!enqueueCallObj!EnqueueReturn ->
  Return!me!EnqueueReturn ->
  Lin(All,me)
) [] (
  Call!me!DequeueCall ->
  Sync!me!DequeueCall!(DequeueReturnNone) ->
  Return!me!(DequeueReturnNone) ->
  STOP
) [] (
  Call!me!DequeueCall ->
  Sync!me!DequeueCall?EnqueueReturnObj:{|DequeueReturn|} ->
  Return!me!EnqueueReturnObj ->
  Lin(All,me)  
)
LinEvents(All,me)={|Sync.me,Call.me,Return.me|}
Linearizers(All)=((|| me: All @ [LinEvents(All,me)] Lin(All,me)) [|{|Sync|}|] Spec(qNewQueue)) \ {|Sync|}
