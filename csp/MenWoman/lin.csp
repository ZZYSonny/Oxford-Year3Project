channel Sync: TypeThreadID.TypeThreadID.TypeThreadID.TypeThreadID
--(Identity of thread calling ManSync).(Return of ManSync).(Identity of thread calling WomanSync).(Return of WomanSync)

Spec(All) = Sync?man:All?woman:diff(All,{man})!woman!man -> Spec(All)

--Linearizer for a process
Lin(All,me)= (
  Call!me!ManSync->
  Sync!me?mereturn?other:diff(All,{me})?otherreturn ->
  Return!me!ManSync!mereturn ->
  Lin(All,me)
)|~|(
  Call!me!WomanSync ->
  Sync?other:diff(All,{me})?otherreturn!me?mereturn ->
  Return!me!WomanSync!mereturn ->
  Lin(All,me)
)|~|STOP
LinEvents(All,me)=union({
  ev | ev<-{|Sync|},
  let Sync.t1.a.t2.b=ev within
    countList(me,<t1,t2>)==1 and member(t1,All) and member(t2,All)
},{|Call.me,Return.me|})
Linearizers(All)= ((|| me: All @ [LinEvents(All,me)]  Lin(All,me)) [|{|Sync|}|] Spec(All)) \ {|Sync|}
